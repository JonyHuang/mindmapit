
            var blocks = [];
            blocks.push({x: 0, y: 0, w: 25, h: 100});
            blocks.push({x: 200, y: 40, w: 25, h: 100});
            blocks.push({x: 350, y: 240, w: 125, h: 100});

            for (var i = 0; i < blocks.length; ++i) {
                var block = blocks[i];

                ctx.fillRect(block.x, block.y, block.w, block.h);
            }

// Draw joining edges by pairs
            for (var i = 0; i < blocks.length; ++i) {
                var firstBlock = blocks[i];

                for (var j = i + 1; j < blocks.length; ++j) {
                    var secondBlock = blocks[j];

                    var p1, p2, cp1, cp2;

                    // Case: one block above the other
                    if (firstBlock.x < secondBlock.x + secondBlock.w &&
                        firstBlock.x + firstBlock.w > secondBlock.x) {
                        var separation = Math.abs(secondBlock.y - (firstBlock.y + firstBlock.h)) / 1.5;

                        p1 = {x: firstBlock.x + firstBlock.w / 2, y: firstBlock.y + firstBlock.h};
                        p2 = {x: secondBlock.x + secondBlock.w / 2, y: secondBlock.y};

                        cp1 = {x: p1.x, y: p1.y + separation};
                        cp2 = {x: p2.x, y: p2.y - separation};

                        console.log(p1);
                        console.log(cp1);
                        console.log(p2);
                        console.log(cp2);
                        console.log(separation);
                    }

                    // Case one block next to the other
                    else {
                        var separation = Math.abs(secondBlock.x - (firstBlock.x + firstBlock.w)) / 1.5;
                        p1 = {x: firstBlock.x + firstBlock.w, y: firstBlock.y + firstBlock.h / 2};
                        p2 = {x: secondBlock.x, y: secondBlock.y + secondBlock.h / 2};

                        cp1 = {x: firstBlock.x + firstBlock.w + separation, y: firstBlock.y + firstBlock.h / 2};
                        cp2 = {x: secondBlock.x - separation, y: secondBlock.y + secondBlock.h / 2};
                    }

                    ctx.beginPath();
                    ctx.moveTo(p1.x, p1.y);

                    ctx.bezierCurveTo(
                        cp1.x, cp1.y,
                        cp2.x, cp2.y,
                        p2.x, p2.y
                    );
                    ctx.lineWidth = 5;
                    ctx.stroke();

                }
            }